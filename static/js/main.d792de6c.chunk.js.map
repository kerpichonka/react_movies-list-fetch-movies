{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","data/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","isVisible","setIsVisible","handleClick","searchMovie","fetch","then","response","json","getMovies","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","data","setMovies","some","film","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,MCJjC,IAAMG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfC,mBAAS,IADM,mBAClChB,EADkC,KAC3BiB,EAD2B,OAEfD,mBAAS,IAFM,mBAElCL,EAFkC,KAE3BO,EAF2B,OAGPF,oBAAS,GAHF,mBAGlCG,EAHkC,KAGvBC,EAHuB,KAKnCC,EAAc,SAACC,ICVhB,SAAmBtB,GACxB,OAAOuB,MAAM,GAAD,OAHI,0BAGJ,8BAAmCvB,IAC5CwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDS3BC,CAAUL,GACPE,MAAK,SAACC,GACL,GAA0B,UAAtBA,EAASG,SAIX,OAHAV,EAAS,SACTE,GAAa,GAKfF,EAAS,CACPlB,MAAOyB,EAASI,MAChB5B,YAAawB,EAASK,KACtB5B,OAAQuB,EAASM,OACjBlB,OAAQY,EAASO,OACjB7B,QAAQ,8BAAD,OAAgCsB,EAASO,UAElDZ,GAAa,OAInB,OACE,oCACE,0BACEhB,UAAU,aACV6B,SAAU,SAACC,GACTA,EAAMC,iBACFhB,GACFF,EAAS,IAGXI,EAAYrB,KAGd,yBAAKI,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAU,kBACVoC,MAAOxC,EACPyC,SAAU,SAACP,GAAW,IACZM,EAAUN,EAAMQ,OAAhBF,MAERvB,EAASuB,OAKdrB,GACC,uBAAGf,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,mBAFZ,iBAQF,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,oBACVuC,QAAS,WACHhC,GACFI,EAASJ,KALf,sBAeN,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,GAAS,kBAAC,EAAcA,M,OE/FpBiC,EAAM,WAAO,IAAD,EACK5B,mBAAS6B,GADd,mBAChBpC,EADgB,KACRqC,EADQ,KAYvB,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAfA,SAACJ,GACKF,EAClBsC,MAAK,SAAAC,GAAI,OAAIA,EAAKnC,SAAWF,EAAME,WAGpCiC,EAAU,GAAD,mBAAKrC,GAAL,CAAaE,WCT5BsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d792de6c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../data/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClick = (searchMovie) => {\n    getMovies(searchMovie)\n      .then((response) => {\n        if (response.Response === 'False') {\n          setMovie('');\n          setIsVisible(true);\n\n          return;\n        }\n\n        setMovie({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster,\n          imdbId: response.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        });\n        setIsVisible(false);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (isVisible) {\n            setTitle('');\n          }\n\n          handleClick(title);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={(event) => {\n                const { value } = event.target;\n\n                setTitle(value);\n              }}\n            />\n          </div>\n\n          {isVisible && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  addMovie(movie);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE__URL = 'http://www.omdbapi.com/';\n\nexport function getMovies(title) {\n  return fetch(`${BASE__URL}?apikey=3502a4aa&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    const hasSameMovie = movies\n      .some(film => film.imdbId === movie.imdbId);\n\n    if (!hasSameMovie) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}